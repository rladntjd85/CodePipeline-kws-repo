<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.erp_mes.mes.quality.mapper.QualityMapper">

	<insert id="insertItem" parameterType="com.erp_mes.mes.quality.dto.InspectionItemDTO">
	    <selectKey keyProperty="itemId" resultType="long" order="BEFORE">
	        SELECT INSPECTION_ITEM_SEQ.NEXTVAL FROM DUAL
	    </selectKey>
	    INSERT INTO INSPECTION_ITEM
	    <trim prefix="(" suffix=")" suffixOverrides=",">
	        ITEM_ID,
	        <if test="materialId != null and materialId != ''">MATERIAL_ID,</if>
	        <if test="proId != null and proId != ''">PRO_ID,</if>
	        INSPECTION_FM_ID,
	        TOLERANCE_VALUE,
	        UNIT,
	    </trim>
	    <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
	        #{itemId},
	        <if test="materialId != null and materialId != ''">#{materialId},</if>
	        <if test="proId != null and proId != ''">#{proId},</if>
	        #{inspectionFMId},
	        #{toleranceValue},
	        #{unit},
	    </trim>
	</insert>

	<select id="findAllItems" resultType="com.erp_mes.mes.quality.dto.InspectionItemDTO">
	    SELECT
	        T1.ITEM_ID,
	        T1.MATERIAL_ID AS materialId,
	        T1.PRO_ID AS proId,
	        T1.INSPECTION_FM_ID,
	        T1.TOLERANCE_VALUE,
	        T1.UNIT,
	        T2.INSPECTION_TYPE AS inspectionType,
	        T2.ITEM_NAME AS itemName,
	        T2.METHOD_NAME AS methodName
	    FROM INSPECTION_ITEM T1
	    JOIN INSPECTION_FM T2 ON T1.INSPECTION_FM_ID = T2.INSPECTION_FM_ID
	</select>

	<select id="findUnits"
		resultType="com.erp_mes.erp.commonCode.dto.CommonDetailCodeDTO">
		SELECT
		COM_DT_ID AS comDtId,
		COM_DT_NM AS comDtNm
		FROM COMMON_DT_CODE
		WHERE COM_ID = 'UNIT'
	</select>
	
    <update id="updateInspectionFm" parameterType="com.erp_mes.mes.quality.dto.InspectionFMDTO">
        UPDATE INSPECTION_FM
        SET
            INSPECTION_TYPE = #{inspectionType},
            ITEM_NAME = #{itemName},
            METHOD_NAME = #{methodName}
        WHERE
            INSPECTION_FM_ID = #{inspectionFMId}
    </update>

    <update id="updateInspectionItem" parameterType="com.erp_mes.mes.quality.dto.InspectionItemDTO">
        UPDATE INSPECTION_ITEM
        SET
            INSPECTION_FM_ID = #{inspectionFMId},
            TOLERANCE_VALUE = #{toleranceValue},
            UNIT = #{unit},
            <if test="materialId != null">MATERIAL_ID = #{materialId},</if>
            <if test="materialId == null">MATERIAL_ID = NULL,</if>
            <if test="proId != null">PRO_ID = #{proId}</if>
            <if test="proId == null">PRO_ID = NULL</if>
        WHERE
            ITEM_ID = #{itemId}
    </update>

	<delete id="deleteItems">
		DELETE FROM INSPECTION_ITEM
		WHERE ITEM_ID IN
		<foreach collection="itemIds" item="id" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>

	<select id="getInspectionResultList" resultType="com.erp_mes.mes.quality.dto.InspectionResultDTO">
	    SELECT
	        T1.RESULT_ID AS resultId,
	        T1.INSPECTION_ID AS inspectionId,
	        T1.RESULT AS result,
	        T1.REMARKS AS remarks,
	        T1.INSPECTION_TYPE AS inspectionType,
	        T2.PRODUCT_ID AS productId,
	        T2.PROCESS_ID AS processId,
	        T2.MATERIAL_ID AS materialId,
	        T2.INSPECTION_DATE AS inspectionDate,
	        T2.EMP_ID AS empId,
	        T2.LOT_ID AS lotId,
	        T3.COM_DT_NM AS inspectionTypeName,
	        T4.PRO_NM AS processName,
	        T5.PRODUCT_NAME AS productName,
	        T6.EMP_NAME AS empName,
	        T8.MATERIAL_NAME AS materialName,
	        
	        CASE
	            WHEN T2.INSPECTION_TYPE = 'QC001' THEN T8.MATERIAL_NAME  
	            ELSE T5.PRODUCT_NAME
	        END AS displayTargetName,
	
	        CASE
	            WHEN T2.INSPECTION_TYPE IN ('QC002', 'QC003') THEN T4.PRO_NM
	            ELSE ''
	        END AS displayProcessName
	
	    FROM INSPECTION_RESULT T1
	    JOIN INSPECTION T2 ON T1.INSPECTION_ID = T2.INSPECTION_ID
	    LEFT JOIN COMMON_DT_CODE T3 ON T2.INSPECTION_TYPE = T3.COM_DT_ID AND T3.COM_ID = 'QC'
	    LEFT JOIN PROCESS T4 ON T2.PROCESS_ID = T4.PRO_ID
	    LEFT JOIN PRODUCT T5 ON T2.PRODUCT_ID = T5.PRODUCT_ID
	    LEFT JOIN EMPLOYEE T6 ON T2.EMP_ID = T6.EMP_ID
	    LEFT JOIN MATERIAL T8 ON T2.MATERIAL_ID = T8.MATERIAL_ID
	    ORDER BY T2.INSPECTION_DATE DESC
	</select>

	<select id="findInCountByInId" parameterType="String" resultType="Integer">
	    SELECT IN_COUNT FROM INPUT WHERE IN_ID = #{inId}
	</select>
	
	<update id="updateInputStatusByInId">
	    UPDATE INPUT
	    SET IN_STATUS = #{newStatus},
	    	IN_COUNT = #{acceptedCount}
	    WHERE IN_ID = #{inId}
	</update>
	
	<insert id="insertInspection" parameterType="com.erp_mes.mes.quality.dto.InspectionDTO">
	    <selectKey keyProperty="inspectionId" resultType="long" order="BEFORE">
	        SELECT INSPECTION_SEQ.NEXTVAL FROM DUAL
	    </selectKey>
	    INSERT INTO INSPECTION (
	        INSPECTION_ID, INSPECTION_TYPE, PRODUCT_ID, PROCESS_ID, MATERIAL_ID,
	        INSPECTION_DATE, EMP_ID, LOT_ID
	    ) VALUES (
	        #{inspectionId}, #{inspectionType}, 
	        #{productId, jdbcType=NUMERIC}, 
	        #{processId, jdbcType=NUMERIC}, 
	        #{materialId, jdbcType=VARCHAR},
	        SYSDATE, #{empId}, #{lotId}
	    )
	</insert>
	
	<insert id="insertInspectionResult" parameterType="com.erp_mes.mes.quality.dto.InspectionResultDTO">
	    <selectKey keyProperty="resultId" resultType="long" order="BEFORE">
	        SELECT INSPECTION_RESULT_SEQ.NEXTVAL FROM DUAL
	    </selectKey>
	    INSERT INTO INSPECTION_RESULT (
	        RESULT_ID, INSPECTION_ID, RESULT, REMARKS, INSPECTION_TYPE
	    ) VALUES (
	        #{resultId}, #{inspectionId}, #{result}, #{remarks}, #{inspectionType}
	    )
	</insert>
	
	<select id="getIncomingInspectionTargets" resultType="com.erp_mes.mes.quality.dto.InspectionTargetDTO">
	    SELECT
	        T1.IN_ID AS targetId,
	        T2.MATERIAL_NAME AS targetName,
	        T1.LOT_ID AS lotId,
	        T1.IN_COUNT AS quantity,
	        T3.INSPECTION_TYPE AS inspectionType,
	        'Incoming' AS targetSource,  T1.IN_STATUS AS remarks,
	        T2.MATERIAL_ID AS materialId
	    FROM INPUT T1
	    LEFT JOIN MATERIAL T2 ON T1.MATERIAL_ID = T2.MATERIAL_ID
	    LEFT JOIN INSPECTION_FM T3 ON T2.INSPECTION_FM_ID = T3.INSPECTION_FM_ID
	    WHERE T1.IN_STATUS = '입고대기' AND T1.MATERIAL_ID IS NOT NULL
	</select>
	
	<select id="getProcessInspectionTargetsGrouped" resultType="com.erp_mes.mes.quality.dto.InspectionTargetDTO">
	    SELECT
	        T1.WORK_ORDER_ID AS targetId,
	        T4.PRODUCT_NAME AS targetName,
	        T2.PLAN_QUANTITY AS quantity,
	        'QC002' AS inspectionType,
	        T1.WORK_ORDER_STATUS AS remarks,
	        T8.GOOD_QTY AS goodQty,
	        T8.DEFECT_QTY AS defectQty,
	        T8.LOT_ID AS lotId,
	        'WorkOrder' AS targetSource,
	        T4.PRODUCT_ID AS productId,
	        (
	            SELECT MIN(T5_SUB.PRO_ID)
	            FROM PROCESS_ROUTING T3_SUB
	            JOIN PROCESS T5_SUB ON T3_SUB.PRO_ID = T5_SUB.PRO_ID
	            WHERE T3_SUB.PRODUCT_ID = T4.PRODUCT_ID
	        ) AS processId
	    FROM WORK_ORDER T1
	    LEFT JOIN PRODUCT_PLAN T2 ON T1.PLAN_ID = T2.PLAN_ID
	    LEFT JOIN PRODUCT T4 ON T2.PRODUCT_ID = T4.PRODUCT_ID
	    LEFT JOIN WORK_RESULT T8 ON T1.WORK_ORDER_ID = T8.WORK_ORDER_ID
	    WHERE T1.WORK_ORDER_STATUS = '검사대기'
	</select>
	
	<select id="findInspectionItemsByMaterialId"
	    parameterType="Long"
	    resultType="com.erp_mes.mes.quality.dto.InspectionItemDTO">
	    SELECT
	        T1.ITEM_ID,
	        T1.TOLERANCE_VALUE,
	        T1.UNIT,
	        T2.ITEM_NAME,
	        T2.METHOD_NAME,
	        T2.INSPECTION_TYPE AS inspectionType,
	        T3.SPEC AS standardValue 
	    FROM INSPECTION_ITEM T1
	    LEFT JOIN INSPECTION_FM T2 ON T1.INSPECTION_FM_ID = T2.INSPECTION_FM_ID
	    LEFT JOIN MATERIAL T3 ON T1.MATERIAL_ID = T3.MATERIAL_ID
	    WHERE T1.MATERIAL_ID = #{materialId}
	</select>
		
	<select id="findInspectionItemsByProcessIdAndSeq"
	    parameterType="Long"
	    resultType="com.erp_mes.mes.quality.dto.InspectionItemDTO">
	    SELECT
	    	DISTINCT
	        T1.ITEM_ID,
	        T1.TOLERANCE_VALUE,
	        T1.UNIT,
	        T2.ITEM_NAME,
	        T2.METHOD_NAME,
	        T2.INSPECTION_TYPE AS inspectionType,
	        T4.SPEC AS standardValue
	    FROM INSPECTION_ITEM T1
	    LEFT JOIN INSPECTION_FM T2 ON T1.INSPECTION_FM_ID = T2.INSPECTION_FM_ID
	    LEFT JOIN PROCESS_ROUTING T3 ON T1.PRO_ID = T3.PRO_ID
	    LEFT JOIN PRODUCT T4 ON T3.PRODUCT_ID = T4.PRODUCT_ID
	    WHERE T1.PRO_ID = #{processId} AND T1.PRO_ID IS NOT NULL
	</select>
	
	<select id="findTargetNameByInId" parameterType="String" resultType="String">
    SELECT T2.MATERIAL_NAME
    FROM INPUT T1
    JOIN MATERIAL T2 ON T1.MATERIAL_ID = T2.MATERIAL_ID
    WHERE T1.IN_ID = #{inId}
	</select>
	
	<insert id="insertDefectItem" parameterType="com.erp_mes.mes.pop.dto.DefectDTO">
	    INSERT INTO DEFECT_ITEM (
	        DEFECT_TYPE, DEFECT_REASON, DEFECT_QTY, WORK_ORDER_ID,
	        PRODUCT_NAME, EMP_ID, DEFECT_LOCATION, DEFECT_DATE, LOT_ID
	    ) VALUES (
	        #{defectType}, 
	        #{defectReason}, 
	        #{defectQty},
	        #{workOrderId, jdbcType=NUMERIC}, 
	        #{productNm}, 
	        #{empId}, 
	        #{defectLocation}, 
	        SYSDATE,
	        #{lotId}
	    )
	</insert>

	<update id="updateWorkOrderStatus" parameterType="String">
		UPDATE work_order
		SET work_order_status = '작업완료'
		WHERE work_order_id = #{workOrderId}
	</update>
	
	<select id="findTargetNameByWorkOrderId" resultType="string">
    SELECT 
        T2.PRODUCT_NAME 
    FROM WORK_ORDER T1
    JOIN PRODUCT_PLAN T3 ON T1.PLAN_ID = T3.PLAN_ID
    JOIN PRODUCT T2 ON T3.PRODUCT_ID = T2.PRODUCT_ID
    WHERE T1.WORK_ORDER_ID = #{workOrderId}
	</select>
	
	<update id="updateWorkResultCounts">
    UPDATE WORK_RESULT
    SET 
        GOOD_QTY = #{acceptedCount},
        DEFECT_QTY = #{defectiveCount}
    WHERE 
        WORK_ORDER_ID = #{workOrderId}
	</update>
	
	<select id="findInspectionTypeById" parameterType="long" resultType="string">
    SELECT 
        INSPECTION_TYPE 
    FROM INSPECTION 
    WHERE INSPECTION_ID = #{inspectionId}
	</select>
	
	<select id="getIncomingDetail" parameterType="long" resultType="com.erp_mes.mes.quality.dto.InspectionTargetDTO">
	    SELECT
	        T1.INSPECTION_ID AS inspectionId,
	        T1.INSPECTION_TYPE AS inspectionType,
	        'Incoming' AS targetSource,
	        T1.LOT_ID AS lotId,
	        T4.MATERIAL_NAME AS targetName,
	        T1.MATERIAL_ID AS targetId,
	        NULL AS planId,
	        NULL AS workOrderId,
	        T5.DEFECT_REASON AS defectReason,
	        T2.REMARKS AS remarks
	    FROM INSPECTION T1
	    LEFT JOIN INSPECTION_RESULT T2 ON T1.INSPECTION_ID = T2.INSPECTION_ID
	    LEFT JOIN MATERIAL T4 ON T1.MATERIAL_ID = T4.MATERIAL_ID
	    LEFT JOIN DEFECT_ITEM T5 ON T4.MATERIAL_NAME = T5.PRODUCT_NAME AND T1.LOT_ID = T5.LOT_ID  
	    WHERE T1.INSPECTION_ID = #{inspectionId}
	</select>
	
	<select id="getProcessDetail" parameterType="long" resultType="com.erp_mes.mes.quality.dto.InspectionTargetDTO">
    SELECT
        DISTINCT 
        T1.INSPECTION_ID AS inspectionId,
        T1.INSPECTION_TYPE AS inspectionType,
        T1.LOT_ID AS lotId,
        T4.PRODUCT_NAME AS targetName,
        T3.WORK_ORDER_ID AS targetId,
        T5.PLAN_ID AS planId,
        TO_CHAR(T6.DEFECT_REASON) AS defectReason, 
        TO_CHAR(T2.REMARKS) AS remarks
    FROM INSPECTION T1
    LEFT JOIN INSPECTION_RESULT T2 ON T1.INSPECTION_ID = T2.INSPECTION_ID
    LEFT JOIN PRODUCT T4 ON T1.PRODUCT_ID = T4.PRODUCT_ID
    LEFT JOIN PRODUCT_PLAN T5 ON T1.PRODUCT_ID = T5.PRODUCT_ID 
    LEFT JOIN WORK_ORDER T3 ON T5.PLAN_ID = T3.PLAN_ID 
    LEFT JOIN DEFECT_ITEM T6 ON T3.WORK_ORDER_ID = T6.WORK_ORDER_ID 

    WHERE T1.INSPECTION_ID = #{inspectionId}
	</select>
<!-- 	불량관리 관련 -->
	<select id="getDefectHistory" parameterType="map" resultType="com.erp_mes.mes.pop.dto.DefectDTO">
	    SELECT
	        T1.DEFECT_ITEM_ID AS defectItemId,
	        T1.DEFECT_TYPE AS defectType,
	        T1.DEFECT_REASON AS defectReason,
	        T1.DEFECT_QTY AS defectQty,
	        T1.PRODUCT_NAME AS productNm,
	        T1.DEFECT_LOCATION AS defectLocation,
	        T1.DEFECT_DATE AS defectDate,
	        T3.EMP_NAME AS empName, 
	        T4.COM_DT_NM AS defectLocationName,
	        T5.COM_DT_NM AS defectTypeName
	    FROM DEFECT_ITEM T1
	    LEFT JOIN EMPLOYEE T3 ON T1.EMP_ID = T3.EMP_ID
	    LEFT JOIN COMMON_DT_CODE T4 ON T1.DEFECT_LOCATION = T4.COM_DT_ID AND T4.COM_ID = 'LOC' 
	    LEFT JOIN COMMON_DT_CODE T5 ON T1.DEFECT_TYPE = T5.COM_DT_ID AND T5.COM_ID = 'DEFECT'
	    <where>
	        <if test="defectType != null and defectType != ''">
	            AND T1.DEFECT_TYPE = #{defectType}
	        </if>
	        <if test="productName != null and productName != ''">
	            AND T1.PRODUCT_NAME = #{productName}
	        </if>
	        <if test="employeeId != null and employeeId != ''">
	            AND T1.EMP_ID = #{employeeId}
	        </if>
            <if test="defectLocation != null and defectLocation != ''">
            	AND T1.DEFECT_LOCATION = #{defectLocation}
        	</if>
	    </where>
	    ORDER BY T1.DEFECT_DATE DESC
	</select>
	
<select id="getDefectSummary" resultType="map">
    SELECT
        T1.TOTAL_COUNT, 
        T1.TOTAL_DEFECT_QTY,
        T2.TOTAL_PRODUCT_QTY
    FROM 
    (
        SELECT
            COUNT(DEFECT_ITEM_ID) AS TOTAL_COUNT, 
            SUM(DEFECT_QTY) AS TOTAL_DEFECT_QTY
        FROM DEFECT_ITEM
    ) T1
    CROSS JOIN
    (
        SELECT SUM(GOOD_QTY) + SUM(DEFECT_QTY) AS TOTAL_PRODUCT_QTY
        FROM WORK_RESULT
    ) T2
</select>
	
	<select id="getMonthlyDefectTrend" resultType="map">
	    SELECT
	        TO_CHAR(DEFECT_DATE, 'YYYY-MM') AS MONTH,
	        SUM(DEFECT_QTY) AS TOTAL_QUANTITY
	    FROM DEFECT_ITEM
	    GROUP BY TO_CHAR(DEFECT_DATE, 'YYYY-MM')
	    ORDER BY MONTH
	</select>
	
	<select id="getTypeRatio" resultType="map">
    SELECT
        T1.DEFECT_TYPE AS DEFECTTYPEID,
        T2.COM_DT_NM AS DEFECTTYPENAME,
        SUM(T1.DEFECT_QTY) AS TOTAL_QUANTITY 
    FROM DEFECT_ITEM T1
    LEFT JOIN COMMON_DT_CODE T2 ON T1.DEFECT_TYPE = T2.COM_DT_ID AND T2.COM_ID = 'DEFECT'
    GROUP BY T1.DEFECT_TYPE, T2.COM_DT_NM
    ORDER BY TOTAL_QUANTITY DESC
	</select>

</mapper>